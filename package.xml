<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "../package.dtd">
<package version="1.0">
  <name>XML_Transformer</name>
  <summary>XML Transformations in PHP</summary>
  <description>
    With the XML/Transformer class one can easily bind PHP
    functionality to XML tags, thus transforming the input XML tree
    into an output XML tree without the need for XSLT.
  </description>
  <maintainers>
    <maintainer>
      <user>sebastian</user>
      <role>lead</role>
      <name>Sebastian Bergmann</name>
      <email>sb@sebastian-bergmann.de</email>
    </maintainer>
    <maintainer>
      <user>kk</user>
      <role>developer</role>
      <name>Kristian Köhntopp</name>
      <email>kris@koehntopp.de</email>
    </maintainer>
  </maintainers>
  <license>PHP License</license>
  <release>
    <version>0.7-dev</version>
    <state>devel</state>
    <date>2002-XX-XX</date>
    <notes>
<![CDATA[
+ Added new tags to the PHP Namespace Handler:

    + <php:define/> ...

    + <php:namespace/> ...

    + <php:cookievariable name=""/> inserts the contents of a given
      HTTP Cookie into the output XML tree.

    + <php:servervariable name=""/> inserts the contents of a
      given server variable into the output XML tree.

    + <php:logic/> executes a given block of PHP code and stores
      its output into the output XML tree.

* Refactored the XML_Transformer class into

    * XML_Transformer.

    * XML_Transformer_CallbackRegistry.

      This class faciliates the registration of new callbacks
      on-the-fly inside the transformation's recursion.

    * XML_Transformer_OutputBuffer.

      This class decouples the XML transformation from the output
      buffering.

    * XML_Transformer_Util.

      Static utility methods.

* Deprecated overloading of single XML elements.

  By overloading a special namespace, &MAIN, the old behaviour can
  be achieved.

* setDefaultCallback() and unsetDefaultCallback() are deprecated.

  By overloading the newly introduced &MAIN namespace with a class
  that provides default element handlers the old behaviour can
  be achieved.
]]>
    </notes>
    <filelist>
      <dir name="/" baseinstalldir="XML">
        <file role="php" name="Transformer.php"/>

        <dir name="Transformer">
          <file role="php" name="CallbackRegistry.php"/>
          <file role="php" name="Namespace.php"/>
          <file role="php" name="OutputBuffer.php"/>
          <file role="php" name="PHP.php"/>
          <file role="php" name="Util.php"/>
        </dir>
      </dir>
    </filelist>
    <deps>
      <dep type="php" rel="ge" version="4.2.0" />
      <dep type="ext" rel="has">xml</dep>
    </deps>
  </release>
  <changelog>
    <release>
      <version>0.6</version>
      <state>stable</state>
      <date>2002-09-18</date>
      <notes>
<![CDATA[
+ Added methods setDefaultCallback() and unsetDefaultCallback() to
  set/unset default callbacks for elements that are not overloaded.

+ Added a base class for namespace-handling transformer classes.

+ Removed canonicalName() method in favour of more general
  canonicalizeAttributes() method.

+ Added PHP namespace handler. Initially the following tags are
  supported:

    + <php:expr/> evaluates a given PHP expression and stores its
      return value into the output XML tree.

    + <php:getvariable name=""/> inserts the contents of a given
      global variable into the output XML tree.

    + <php:setvariable name="">value</php:setvariable sets a given
      global variable to a given value.

    + <php:getparameter name=""/> inserts the contents of a given
      HTTP GET parameter into the output XML tree.

    + <php:postparameter name=""/> inserts the contents of a given
      HTTP POST parameter into the output XML tree.

    + <php:sessionvariable name=""/> inserts the contents of a given
      session variable into the output XML tree.

* Fixed a bug in overloadNamespace()'s error handling.

* Recursive operation can now be selectively turned off for
  overloaded namespaces, too.

* Attributes are now canonicalized on-the-fly, rather than at
  the time of their serialization which can be too late.

  As a side-effect, the attributesToString() method can now be
  called statically.

* Fixed recursive transformation of overloaded namespaces.

* Changed license from PHP License 2.02 to PHP License 3.00.
]]>
      </notes>
    </release>
    <release>
      <version>0.5</version>
      <state>stable</state>
      <date>2002-09-08</date>
      <notes>
* Resolved infinite recursion problem that arose when handlers
  do not remove the tags of their assigned element from the input
  XML document, but only work on it's sub-tree.
      </notes>
    </release>
    <release>
      <version>0.4</version>
      <state>stable</state>
      <date>2002-09-04</date>
      <notes>
+ Added a filtering mechanism to the debugger that limits
  the generated debugging information to a given set of
  elements.

* Debugging information is now sent using error_log()
  instead of syslog().

* Fixed a bug in the case-folding handling.
      </notes>
    </release>
    <release>
      <version>0.3</version>
      <state>stable</state>
      <date>2002-05-16</date>
      <notes>
+ Added setDebug() and stackdump() to allow for easier debugging.

+ Added setRecursiveOperation() to enable/disable the recursive
  operation of the XML Transformer.

* Changed the constructor to be more intuitive and user-friendly.

* Changed setCaseFolding() to accept a second parameter to set
  the case to which XML attributes and elements are folded.
      </notes>
    </release>
    <release>
      <version>0.2</version>
      <date>2002-04-07</date>
      <notes>
* Renamed to XML_Transformer, per Stig's request.
      </notes>
    </release>
    <release>
      <version>0.1</version>
      <date>2002-04-06</date>
      <notes>
* Initial independent PEAR release.
      </notes>
    </release>
  </changelog>
</package>
